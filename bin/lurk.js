#!/usr/bin/env node
var fs = require('fs');
var path = require('path');
var spawn = require('child_process').spawn;
var program = require('commander');
var pkg = require(path.resolve(__dirname, '..', 'package.json'));
var emsdkDir = path.resolve(__dirname, '..', 'emsdk');
var emcc = path.join(emsdkDir, 'emscripten', 'master', 'emcc');
var empp = path.join(emsdkDir, 'emscripten', 'master', 'em++');
var emmake = path.join(emsdkDir, 'emscripten', 'master', 'emmake');
var ibBin = path.resolve(__dirname, '..', 'ib', 'dj', 'tools', 'ib');
var utility = require('../lib/utility.js');

program
  .version(pkg.version)
  .option('e, expose', 'view the emsdk environment variables')
  .option('b, build <target>', 'builds specified target')
  .option('-s, --src_root', 'lurk source location for lurk build.')
  .option('-p, --print_script', 'print makefile generated by lurk build')
  .option('-c, --cfg <config_file_name>', 'config file for lurk build relative to src_root')
  .parse(process.argv);

if (program.expose) {
  utility.print([
    '',
    'Emscripten SDK Location',
    '=======================',
    '',
    '  ' + emsdkDir,
    '',
    'Add it to your path',
    '===================',
    '',
    '  source ' + path.join(emsdkDir, 'emsdk_env.sh'),
    '  source ' + path.join(emsdkDir, 'emsdk_set_env.sh'),
    ''
  ], 'yellow');
}

if (program.build) {
  // add config object
  // environment variables
  process.env.emcc = emcc;
  process.env.empp = empp;
  process.env.emmake = emmake;

  var args = [
    '--cfg',
    program.cfg || 'common',
    '--src_root',
    program.src_root || process.cwd(),
    program.print_cfg ? '--print_cfg' : '',
    program.print_script ? '--print_script' : '',
    program.build
  ];

  // spawn build process
  var build = spawn(ibBin, args, {
    stdio: 'inherit'
  });

  build.on('close', function (exitCode) {
    if (exitCode === 0) {
      utility.print(['', 'No Build Errors', ''], 'green');
    } else {
      utility.print(['', 'Build Failed', ''], 'yellow');
    }
  });
}
