#!/usr/bin/env node
var path = require('path');
var program = require('commander');
var pkg = require(path.resolve(__dirname, '..', 'package.json'));
var emsdkDir = path.resolve(__dirname, '..', 'emsdk');
var utility = require('../lib/utility');
var BuildTask = require('../lib/tasks/build');
var InitTask = require('../lib/tasks/init');

program
  .version(pkg.version)
  .option('e, expose', 'view the emsdk environment variables')
  .option('i, init', 'generate a starter application')
  .option('b, build [target]', 'builds specified target')
  .option('-s, --src_root <path>', 'lurk source location for lurk build')
  .option('-o, --out_root <path>', 'lurk output location for lurk build')
  .option('-p, --print_script', 'print makefile generated by lurk build')
  .option('-t, --print_args', 'prints arguemnts passed to ib build tool')
  .option('-c, --cfg <config_file_name>', 'config file for lurk build relative to src_root')
  .parse(process.argv);

if (program.expose) {
  utility.print([
    '',
    'Emscripten SDK Location',
    '=======================',
    '',
    '  ' + emsdkDir,
    '',
    'Add it to your path',
    '===================',
    '',
    '  source ' + path.join(emsdkDir, 'emsdk_env.sh'),
    '  source ' + path.join(emsdkDir, 'emsdk_set_env.sh'),
    ''
  ], 'yellow');
} else if (program.build) {
  var buildTask = new BuildTask(program);

  buildTask.run().then(function () {
    utility.print([
      '', 'Build Succeeded', ''
    ], 'green');
  }).catch(function () {
    utility.print([
      '', 'Build Failed', ''
    ], 'red');
  });
} else if (program.init) {
  var initTask = new InitTask(program);

  initTask.run().then(function () {
    utility.print([
      '', 'Init Succeeded', ''
    ], 'green');
  }).catch(function () {
    utility.print([
      '', 'Init Failed', ''
    ], 'red');
  });
}
